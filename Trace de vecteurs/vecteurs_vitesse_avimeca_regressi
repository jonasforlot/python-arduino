import matplotlib.pyplot as plt # pour les graphiques
import numpy as np # numpy pour l'importation des donnees en format txt

# importation des donnees txt obtenues à la suite du pointage 
# (sur AviMeca on a supprimé les 3 premieres lignes dans le fichier texte pour garder les valeurs seules)
lines = open('pointage.txt').readlines() #lecture des lignes du fichier texte
for i in range(len(lines)):                  # On remplace les virgules par des points pour les nombres décimaux
   lines[i]=lines[i].replace(',','.')

open('data.txt', 'w').writelines(lines) #création d'un nouveau fichier texte avec les précédentes modifications
data = np.loadtxt('data.txt')# importation du nouveau fichier texte pour récupérer les valeurs de t, x et y dans un tableau

t = data[:,0] # selection de la premiere colonne
y = data[:,2] # selection de la troisieme colonne
x = [0]*len(y) # Mouvement à une dimension : on crée une liste de 0 pour x,de la même longueur que la liste y


# creation de listes vides pour les composantes des vitesses
vx = []
vy = []

# boucle pour calcul des composantes vx et vy et construction de fleches 
# a partir de la methode quiver de la fonction pyplot 
# (on peut aussi utiliser les méthodes annotate et arrow)
for i in range(0,len(t)-1) :
    vx.append((x[i+1]-x[i])/(t[i+1]-t[i]))
    vy.append((y[i+1]-y[i])/(t[i+1]-t[i]))

    plt.quiver(x[i],y[i], vx[i], vy[i],color = 'r',width=0.005,scale=50,units='xy',angles='xy')
    # méthode pour tracer des vecteurs

    #plt.annotate('', xy = (x[i]+vx[i-1]/40, y[i]+vy[i-1]/40), xytext = (x[i], y[i]), arrowprops = {'color' : 'r','width': 0.5, 'headwidth': 2})
    # autre méthode pour tracer des vecteurs : xytext donne les coordonnees du debut de la fleche, xy donne les coordonnnees de la pointe de la fleche
    
    # plt.arrow(x[i],y[i], vx[i]/40, vy[i]/40,length_includes_head=True,color = 'r',width=0.0001)
    # 3ème méthode pour tracer des vecteurs   plt.arrow(x[i],y[i], vx[i]/20, vy[i]/20,length_includes_head=True,color = 'r',width=0.005)    
   

# afficher points avec croix rouges. Inserer texte (titre, nom des axes,…)
plt.figure(1)
plt.scatter(x, y, c = 'red', marker = '+')
plt.suptitle (" Représentation de $y=f(x)$ " )
plt.title (" Tracé des vecteurs vitesse " )
plt.xlabel("$x$")
plt.ylabel("$y$")
plt.show()
